1. application.properties ->DB 설정 

2. config파일 만들어서 설정
- @configuration 
- 클래스에 extends WebSecurityConfigurerAdapter 상속해준다.
- alt+shift+s 오버라이드로 HttpSecurity http 만들어준다



////

01.07 


aws RDS 에서 보안그룹 -> 인바운드규칙 편집에서
내IP 만 변경후 저장함 

HeodiSQL 접속됨..


01.11  
만들 사이트 - 직방 

aws - ec2 대시보드 설정

1. 인스턴스 시작 -> 인스턴스생성 (1: Amazon Machine Image(AMI) 선택)
2. 여러개중 red hat 선택 
3. 다른거 건드리지않고 -> 단계 3: 인스턴스 세부 정보 구성
4. 여기서도 설정하는거 없음 -> 다음 스토리지 추가
5. 스토리지 추가에서 크기만 30으로 변경
6. 다음 태그추가.
7. 키 : Name , 값: SpringWebService
8. 보안그룹설정 - > 보안그룹이름 spring webService ec2 
9. 내 ip로 설정 // 집에서 할거면 보안그룹 추가하면됨 
// 1번째는 건들지않고 , 그리고 2번째 규칙추가에서 포트범위 8080 만 수정, 3번째 유형 HTTPS 1개추가 (총3개임)
10. 검토및 시작
11. 기존 키 페어 선택 또는 새 키 페어 생성에서
새 키 패어 생성 -> 키페어 이름 spring webservice
이후 키페어 다운로드 -> (이건 e드라이브에 web에 일단 넣어둔다.)
12. 인스턴스 시작
-> 이러면 만들어짐

이걸 껏다켯다 하면 ip가 계속바뀌니까
왼쪽 메뉴에 탈력적 ip에 들어간다

오른쪽에 탈력적 ip주소 할당 클릭

1. 따로 건들건 없음
2. 할당 누르면 됨
3. 그럼 고정 아이피가 생성됨
4. 그리고 작업에 탄력적ip 주소 연결 클릭
5. 인스턴스는 클릭하면 만들어져있는거 나옴.
6. 프라이빗주소도 클릭하면 알아서 나옴 
그리고 연결

인스턴스 다시와서 새로고침 누르면 탄력적ip 에 주소 있음
그럼 됨.

1.인터넷 창에 https://www.putty.org/ 
첫번째꺼 here 클릭

2.Alternative binary files 
의 첫번째 putty.exe (the SSH and Telnet client itself)

첫번째 64-bit x86: putty.exe 다운

3.그리고 마지막에서 2번째 puttygen.exe (a RSA and DSA key generation utility)

첫번쨰 64-bit x86: puttygen.exe 다운

4. 2번째 다운받은 puttygen.exe 실행 
-> conversions 메뉴에서 import key -> 아까 키페어 다운받은걸 넣고 
save 프라이머키 눌러주고 끈다.

5. 그리고 첫번째 다운받은 putty.exe 실행 
host 네임에 ec2-user@3.37.247.57 넣어준다.
ec2-user@ 는 알아서 정해주고 뒤에 아이피는 아까 설정한 탄력적 ip 넣어준다

ssh에서 -> Auth 에 맨아래있는 폴더 찾기 클릭이후 
아까 저장해논 spirng webserviec.ppk 클릭

그리고 Session 클릭후 
-> Host name 에 ec2-user@3.37.247.57 넣어주고 
Saved Sessions 에 aws 이름 넣어주고 save 
그리고 op 누르면 검은 콘솔창 열림


ec2 에다 자바를 설치해야됨

ec2-user@ 콘솔창에 sudo yum install java-11-openjdk-devel 엔터

아래 설치할꺼냐는 y/n 에서 y 엔터

그럼 아래 complete! 라고 나오면 됨.


///////////////////////////

구글 검색창에 filezilla 검색

들어가서 다운로드 client 클릭

그리고 download FileZilla client 다운

창 나오면 첫줄 아래꺼 그냥 다운로드
-> 다운로드중 privacy Policy Terms of Use 파란글씨
아래 2개중 Dedine 클릭후 next 
다운경로는 tools 에 함 

다운이후 
-> 창 열고 설정 -> SFTP 에서 키파일추가 -> springwebservice.pem 으로 추가

1. 파일 -> 사이트 관리자 ->
new site 클릭후 aws 

오른쪽 일반에 프로토콜을 SFTP 로 변경후 
호스트에 아까 aws에 만들어놓은 인스턴스에 퍼블릭 주소 
(ec2-3-37-247-57.ap-northeast-2.compute.amazonaws.com) 를 
넣어준다.

사용자는 ec2-user 
비밀번호는 따로 안처도됨

그리고 연결누르면 됨


////////////////

apache tomcat 들어가서 다운로드-> tomcat 9 클릭

아래보면 tar.gz (pgp, sha512) 으로 클릭!

fileZila 에서 왼쪽 하단에 톰캣 다운받은걸 마우스 우클릭에서 임포트해준다.

1.putty.exe 실행해서 콘솔에 ll(영어LL) 엔터
(톰캣확인)

디렉토리 만들기
mkdir src 엔터

2. gunzip apache-tomcat-9.0.56.tar.gz 엔터 (a에서 텝누르면 자동완성됨)
3. tar -xvf apache-tomcat-9.0.56.tar.gz 엔터 
하면 압축을 푼다


4. sudo mv apache-tomcat-9.0.56 /usr/local/ 엔터 



5. sudo yum install vim 엔터

6. cd apache-tomcat-9.0.56/ 엔터

7. cd conf/ 엔터 

8. sudo vim server.xml 엔터 

vim server.xml 엔터

키보드 page 다운을 통해 밑으로 내리고 
insert (i 누르면됨)아래 되면 설정할 수 있게 됨 
<Host 에서
appBase="." 으로 바꾸고 아래 unpackWARs, autoDeploy는 "false" 는 펄스로 바꾸고 
바로 아래에 
<Context  docBase="/home/ec2-user/src/root" path="" reloadable="false"/> 를 입력하고

esc (insert)나가고 시프트누른상태 :(콜론) w(저장) q(나가기) 엔터 

mkdir -p src/root 엔터 

cd root/ 엔터
pwd 엔터


9. /usr/local/apache-tomcat-9.0.56/bin/startup.sh 엔터 (톰캣시작)

10. /usr/local/apache-tomcat-9.0.56/bin/shutdown.sh (톰캣끄기)

리눅스 명령어
cd : 체인지 디렉토리
ll : 디렉토리확인
cd ~ : 상위로나가기 
sudo mv -f 
///////////////////

이클립스 켜서
오류없이 작동하는 프로젝트 -> export -> 바탕화면 설정후
프로젝트.war 라고 확장자를 써준다.

fileZila 에서 프로젝트를 임포트

aws RDS 에서 ncstest13 식별자에서 보안그룹-> 
인바운드 규칙 편집에서 규칙추가 -> aurora 클릭 이후 돋보기 누르면
아까 설정한 보안그룹 spring webService IP클릭
규칙저장


///////////////////////
ncstest14 - 로그인 부분 시험

ncsTest15 - 내부서버 시험 
controller 작성만 작성. 


ncsTest16 - log4j2

https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot

여기서 gradle -> 이클립스 build.gradle 에 적용하기 
( ext['log4j2.version'] = '2.17.1' )

다시한번 복습하기!